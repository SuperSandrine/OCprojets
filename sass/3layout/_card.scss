.boxC {
  width: 100%;
  aspect-ratio: 4/3;
  max-height: 350px;
  position: relative;
  // boxC permet à .like de se placer
  .like {
    position: absolute;
    bottom: 8%;
    right: 8%;
    // > comment faire pour que right soit définit
    //en fonction du bord de la boxC = j'ai imposé
    // le meme dimensionnement à boxC qu'à .card
  }
  .card {
    aspect-ratio: 4/3;
    border-radius: 15px;
    box-shadow: 3px 3px 10px rgb(200, 200, 200);
    &:hover {
      box-shadow: 8px 8px 15px rgb(170, 170, 170);
    }
    &__new {
      position: absolute;
      right: 10px;
      top: 15px;
      background-color: $colour-accent;
      padding: 7px 10px;
      border-radius: 3px;
    }
    &__image {
      height: 75%;
      &--portrait {
        object-fit: cover;
        object-position: 50% 62%;
        width: 100%;
        height: 100%;
        border-radius: 15px 15px 0 0;
      }
      &--landscape {
        object-fit: cover;
        object-position: bottom;
        width: 100%;
        height: 100%;
        border-radius: 15px 15px 0 0;
        // > comment faire pour que la photo ne soit pas centrée
        //mais alignée en bas et coupée en haut du coup = J'ai rajouté
        // un object-position
      }
    }
    &__description {
      display: flex;
      justify-content: space-between;
      align-items: center;
      background-color: white;
      padding: 20px;
      border-radius: 0 0 15px 15px;
      &__text {
        display: flex;
        flex-direction: column;
        p {
          padding-right: 50px;
          // Pour éviter que le texte de p passe sous le coeur,
          //je lui rajoute un padding
        }
      }
    }
  }
}

// .dish {
//   display: flex;
//   align-items: center;
//   height: 80px;
//   background-color: white;
//   border-radius: 20px;
//   box-shadow: 3px 3px 5px rgb(220, 220, 220);
//   padding: 20px 0;
//   &__description {
//     padding: 0 20px;
//     width: 100%;
//     overflow: hidden;
//     text-overflow: ellipsis;
//     white-space: nowrap;
//     h3 {
//       overflow: hidden;
//       text-overflow: ellipsis;
//       white-space: nowrap;
//       padding-right: 40px;
//     }
//     &__details {
//       display: flex;
//       justify-content: space-between;
//       p {
//         overflow: hidden;
//         text-overflow: ellipsis;
//         white-space: nowrap;
//         padding-right: 10px;
//       }
//       span {
//         text-align: right;
//       }
//     }
//   }
//   &__selection {
//     display: none;
//   }
//   &:hover {
//     cursor: pointer;
//     // TODO trouver la grosse main
//     // pour garder l'espace entre le prix et le titre:en span et le reste de  p
//     .dish__selection {
//       display: unset;
//       background-color: $colour-accent;
//       color: white;
//       height: 80px;
//       min-width: 80px;
//       border-radius: 0 20px 20px 0;
//       i {
//         display: flex;
//         justify-content: center;
//         align-items: center;
//         height: 100%;
//         font-weight: 600;
//         font-size: 1.5rem;
//       }
//     }
//   }
// }

// ++++++++++++++++++++++++++++++++++++++++++++++++++
// ce qui suit ne marche pas très bien
// // .dish {
// //   display: flex;
// //   align-items: center;
// //   height: 80px;
// //   background-color: white;
// //   border-radius: 20px;
// //   box-shadow: 3px 3px 5px rgb(220, 220, 220);
// //   padding: 20px 0;
// //   overflow: hidden;
// //   &__description {
// //     padding: 0 20px;
// //     width: 100%;
// //     overflow: hidden;
// //     text-overflow: ellipsis;
// //     white-space: nowrap;
// //     h3 {
// //       overflow: hidden;
// //       text-overflow: ellipsis;
// //       white-space: nowrap;
// //       padding-right: 40px;
// //     }
// //     &__details {
// //       display: flex;
// //       justify-content: space-between;
// //       p {
// //         overflow: hidden;
// //         text-overflow: ellipsis;
// //         white-space: nowrap;
// //         padding-right: 10px;
// //       }
// //       span {
// //         text-align: right;
// //       }
// //     }
// //   }

// //   // * transition: transform 1450ms, background-color 800ms 150ms;
// // }
// // .dish__selection {
// //   display: flex;
// //   justify-content: center;
// //   align-items: center;
// //   width: 0px;
// //   background-color: $colour-accent;
// //   color: white;
// //   height: 80px;
// //   border-radius: 0 20px 20px 0;
// //   overflow: hidden;

// //   transition: width 1200ms ease-in-out;
// //   i {
// //     display: flex;
// //     justify-content: center;
// //     align-items: center;
// //     height: 100%;
// //     font-weight: 600;
// //     font-size: 1.5rem;
// //   }
// //   .dish__selection:hover {
// //     /* les boutons pour valider choix,
// //   apparaissent avec un survol
// //   Le visiteur peut ajouter les plats qu'il souhaite
// //   à sa commande en cliquant dessus. Cela fait
// //   apparaître une petite coche à droite du plat.
// //   Cette coche devra coulisser de la droite vers
// //   la gauche. Pour cette première version, l’effet
// //   peut apparaître au survol sur desktop au lieu du
// //   clic. Si l’intitulé du plat est trop long, il devra
// //   être rogné avec des points de suspension. Un exemple
// //   de l’effet attendu est fourni.*/
// //     cursor: pointer;
// //     // TODO trouver la grosse main
// //     // pour garder l'espace entre le prix et le titre: en span et le reste de  p
// //     min-width: 80px;
// //     i {
// //     }
// //   }
// // }

// *************************************
// marche partiellement et à l'envers...
// // .dish {
// //   display: flex;
// //   align-items: center;
// //   height: 80px;
// //   background-color: white;
// //   border-radius: 20px;
// //   box-shadow: 3px 3px 5px rgb(220, 220, 220);
// //   padding: 20px 0;
// //   &__description {
// //     padding: 0 20px;
// //     width: 100%;
// //     overflow: hidden;
// //     text-overflow: ellipsis;
// //     white-space: nowrap;
// //     h3 {
// //       overflow: hidden;
// //       text-overflow: ellipsis;
// //       white-space: nowrap;
// //       padding-right: 40px;
// //     }
// //     &__details {
// //       display: flex;
// //       justify-content: space-between;
// //       p {
// //         overflow: hidden;
// //         text-overflow: ellipsis;
// //         white-space: nowrap;
// //         padding-right: 10px;
// //       }
// //       span {
// //         text-align: right;
// //       }
// //     }
// //   }
// // }

// // // * transition: transform 1450ms, background-color 800ms 150ms;
// // .dish__selection {
// //   background-color: $colour-accent;
// //   color: white;
// //   height: 80px;
// //   min-width: 80px;
// //   border-radius: 0 20px 20px 0;
// //   transform: translateX(20%);
// //   transition: transform 1200ms ease-in-out;
// //   i {
// //     display: flex;
// //     justify-content: center;
// //     align-items: center;
// //     height: 100%;
// //     font-weight: 600;
// //     font-size: 1.5rem;
// //     transform: rotate(-180deg);
// //     transition: transform 400ms 200ms ease-in-out;
// //   }
// // }

// // .dish__selection:hover {
// //   /* les boutons pour valider choix,
// //   apparaissent avec un survol
// //   Le visiteur peut ajouter les plats qu'il souhaite
// //   à sa commande en cliquant dessus. Cela fait
// //   apparaître une petite coche à droite du plat.
// //   Cette coche devra coulisser de la droite vers
// //   la gauche. Pour cette première version, l’effet
// //   peut apparaître au survol sur desktop au lieu du
// //   clic. Si l’intitulé du plat est trop long, il devra
// //   être rogné avec des points de suspension. Un exemple
// //   de l’effet attendu est fourni.*/
// //   cursor: pointer;
// //   // TODO trouver la grosse main
// //   // pour garder l'espace entre le prix et le titre: en span et le reste de  p
// //   transform: translateX(0%);
// //   i {
// //     transform: rotate(-0deg);
// //   }
// // }

//>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
.dish {
  display: flex;
  align-items: center;
  background-color: white;
  border-radius: 20px;
  height: 80px;
  box-shadow: 3px 3px 5px rgb(220, 220, 220);
  &__description {
    padding: 20px 20px;
    width: 100%;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    h3 {
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;
      padding-right: 40px;
    }
    &__details {
      display: flex;
      justify-content: space-between;
      p {
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
        padding-right: 10px;
      }
      span {
        text-align: right;
      }
    }
  }
  &__selection {
    background-color: $colour-accent;
    color: white;
    height: 80px;
    min-width: 0px;
    max-width: 0px;
    border-radius: 0 20px 20px 0;
    overflow: hidden;
    transition: min-width 600ms;
    i {
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100%;
      font-weight: 600;
      font-size: 1.5rem;
      transform: rotate(-240deg);
      transition: transform 500ms 100ms ease-in-out;
    }
  }
  &:hover {
    cursor: pointer;
    // TODO trouver la grosse main
    .dish__selection {
      min-width: 80px;
      i {
        font-size: 1.5rem;
        transform: rotate(-0deg);
      }
    }
  }
}

$num-section: 10;
$anim-dur: 1000ms;
$anim-delay: calc($anim-dur / $num-section);

@keyframes section-menu {
  0% {
    transform: translateY(50%); //pour que le dish arrive, mettre 1300%
    opacity: 0;
  }
  75% {
    opacity: 0.3; //crée un décallage entre la position et la transparence
    //TODO est-ce synchronisé ou pas??
  }
  100% {
    transform: translateY(0%);
    opacity: 1;
  }
}
section {
  width: 100%;
  height: 100%;
  .dish {
    transform: translateY(50%);
    opacity: 0;
    animation: section-menu $anim-dur forwards
      cubic-bezier(0.88, 0.47, 0.12, 1.09);

    @for $i from 1 through $num-section {
      &--#{$i} {
        animation-delay: (($anim-delay * $i) + 1000ms);
        //l'animation delay ne fonctionne pas comme mon test sur codepen =
        //problème écriture résolu lié au boucle et sass
        //TODO vérifier exception dans cours de animation delay
      }
    }
  }
}
